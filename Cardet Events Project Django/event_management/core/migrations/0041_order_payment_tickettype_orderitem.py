# Generated by Django 5.1.6 on 2025-07-15 05:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0040_alter_participant_certificate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order identifier', max_length=50, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.event')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.participant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('manual', 'Manual')], default='stripe', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe Payment Intent ID', max_length=255, null=True)),
                ('stripe_charge_id', models.CharField(blank=True, help_text='Stripe Charge ID', max_length=255, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Amount actually paid', max_digits=10)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0, help_text='Transaction fee charged by payment processor', max_digits=10)),
                ('payment_date', models.DateTimeField(blank=True, help_text='Date and time when payment was completed', null=True)),
                ('failure_reason', models.TextField(blank=True, help_text='Reason for payment failure', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the ticket type (e.g., 'General Admission', 'VIP', 'Early Bird')", max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of what this ticket includes', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price per ticket', max_digits=10)),
                ('max_quantity', models.PositiveIntegerField(help_text='Maximum number of tickets available for this type')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this ticket type is available for purchase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='core.event')),
            ],
            options={
                'ordering': ['price'],
                'unique_together': {('event', 'name')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Number of tickets of this type')),
                ('price_per_ticket', models.DecimalField(decimal_places=2, help_text='Price per ticket at time of purchase', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item (quantity Ã— price_per_ticket)', max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='core.order')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='core.tickettype')),
            ],
            options={
                'unique_together': {('order', 'ticket_type')},
            },
        ),
    ]
